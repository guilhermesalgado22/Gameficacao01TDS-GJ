// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projetos.API.Data;

#nullable disable

namespace Projetos.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Projetos.API.Models.ClienteModel", b =>
                {
                    b.Property<int?>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InformacaoContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.EquipeModel", b =>
                {
                    b.Property<int?>("IdEquipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdProjeto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEquipe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEquipe");

                    b.HasIndex("IdProjeto");

                    b.ToTable("Equipes", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.MembroEquipe", b =>
                {
                    b.Property<int>("IdMembro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeMembro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Papel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMembro");

                    b.HasIndex("IdEquipe");

                    b.ToTable("Membros", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.ProjetoModel", b =>
                {
                    b.Property<int?>("IdProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataConclusaoPrevista")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdProjeto");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Projetos", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.SprintModel", b =>
                {
                    b.Property<int?>("IdSprint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjetoIdProjeto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSprint");

                    b.HasIndex("ProjetoIdProjeto");

                    b.ToTable("Sprints", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.TarefaModel", b =>
                {
                    b.Property<int?>("IdTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdProjeto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdResponsavel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjetoIdProjeto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResponsavelIdEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SprintModelIdSprint")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTarefa");

                    b.HasIndex("ProjetoIdProjeto");

                    b.HasIndex("ResponsavelIdEquipe");

                    b.HasIndex("SprintModelIdSprint");

                    b.ToTable("Tarefas", (string)null);
                });

            modelBuilder.Entity("Projetos.API.Models.EquipeModel", b =>
                {
                    b.HasOne("Projetos.API.Models.ProjetoModel", "Projeto")
                        .WithMany("Equipes")
                        .HasForeignKey("IdProjeto");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Projetos.API.Models.MembroEquipe", b =>
                {
                    b.HasOne("Projetos.API.Models.EquipeModel", "Equipe")
                        .WithMany("Membros")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Projetos.API.Models.ProjetoModel", b =>
                {
                    b.HasOne("Projetos.API.Models.ClienteModel", "Cliente")
                        .WithMany("Projetos")
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Projetos.API.Models.SprintModel", b =>
                {
                    b.HasOne("Projetos.API.Models.ProjetoModel", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoIdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Projetos.API.Models.TarefaModel", b =>
                {
                    b.HasOne("Projetos.API.Models.ProjetoModel", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoIdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projetos.API.Models.EquipeModel", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelIdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projetos.API.Models.SprintModel", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("SprintModelIdSprint");

                    b.Navigation("Projeto");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Projetos.API.Models.ClienteModel", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("Projetos.API.Models.EquipeModel", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("Projetos.API.Models.ProjetoModel", b =>
                {
                    b.Navigation("Equipes");

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("Projetos.API.Models.SprintModel", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
